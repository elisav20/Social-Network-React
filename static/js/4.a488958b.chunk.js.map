{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","assets/images/no_user.png","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/AddPostForm.jsx","assets/images/user_avatar.png","assets/images/like.svg","components/Profile/MyPosts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["requiredField","value","undefined","maxLength","length","renderField","Element","input","meta","touched","error","props","hasError","className","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","src","photos","large","noUserAvatar","alt","fullName","maxLength20","reduxForm","form","onSubmit","handleSubmit","Field","name","placeholder","component","validate","Post","userAvatar","message","like","likesCount","MyPosts","postsData","posts","map","post","id","formData","addPost","newPostText","compose","profilePage","Profile","MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","useMatch"],"mappings":"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","file":"static/js/4.a488958b.chunk.js","sourcesContent":["export const requiredField = (value) =>\r\n    value ? undefined : \"Field is required!\";\r\n\r\nexport const maxLength = (maxLength) => (value) =>\r\n    value && value.length <= maxLength\r\n        ? undefined\r\n        : `Max length is ${maxLength} symbols`;\r\n","import React from \"react\";\r\n\r\nexport const renderField =\r\n    (Element) =>\r\n    ({ input, meta: { touched, error }, ...props }) => {\r\n        const hasError = touched && error;\r\n        return (\r\n            <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n                <div>\r\n                    <Element {...input} {...props} />\r\n                </div>\r\n                {hasError && <span> {error} </span>}\r\n            </div>\r\n        );\r\n    };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to=\"/login\" />;\r\n            }\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_user.c4c9739b.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => setEditMode(true);\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => setStatus(e.currentTarget.value);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && (\r\n                <p\r\n                    className=\"profile__about-me\"\r\n                    onDoubleClick={activateEditMode}\r\n                >\r\n                    {status || \"-------\"}\r\n                </p>\r\n            )}\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport noUserAvatar from \"../../../assets/images/no_user.png\";\r\nimport Loader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__info\">\r\n                <img\r\n                    className=\"user__img\"\r\n                    src={\r\n                        profile.photos.large != null\r\n                            ? profile.photos.large\r\n                            : noUserAvatar\r\n                    }\r\n                    alt={profile.fullName}\r\n                />\r\n                <p className=\"profile__name\">{profile.fullName}</p>\r\n                <ProfileStatus status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredField } from \"../../../utils/validators/validators\";\r\nimport { renderField } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name=\"newPostText\"\r\n                    placeholder=\"Text\"\r\n                    component={renderField(\"textarea\")}\r\n                    validate={[requiredField, maxLength20]}\r\n                />\r\n            </div>\r\n            <button>Add post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"ProfileAddPostForm\",\r\n})(AddPostForm);\r\n","export default __webpack_public_path__ + \"static/media/user_avatar.e582e4ba.png\";","export default __webpack_public_path__ + \"static/media/like.16ac3e7e.svg\";","import React from \"react\";\r\nimport userAvatar from \"../../../assets/images/user_avatar.png\";\r\nimport like from \"../../../assets/images/like.svg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"posts__item\">\r\n            <img\r\n                className=\"posts__user-avatar\"\r\n                src={userAvatar}\r\n                alt=\"user avatar\"\r\n            />\r\n            <p className=\"posts__message\">{props.message}</p>\r\n            <div className=\"posts__actions\">\r\n                <img className=\"posts__like\" src={like} alt=\"like\" /> <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport Post from \"./Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    const postsData = props.posts.map((post) => (\r\n        <Post\r\n            message={post.message}\r\n            likesCount={post.likesCount}\r\n            key={post.id}\r\n        />\r\n    ));\r\n\r\n    const addNewPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"my-posts\">\r\n            <h3>My posts</h3>\r\n            <AddPostForm onSubmit={addNewPost} />\r\n            <div className=\"posts\">{postsData}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addPost,\r\n    })\r\n)(MyPosts);\r\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n            />\n            <MyPostsContainer />\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match\r\n            ? this.props.match.params.userId\r\n            : this.props.authorizedUserId;\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,\r\n});\r\n\r\nconst ProfileURLMatch = (props) => {\r\n    const match = useMatch(\"/profile/:userId/\");\r\n    return <ProfileContainer {...props} match={match} />;\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n    })\r\n)(ProfileURLMatch);\r\n"],"sourceRoot":""}