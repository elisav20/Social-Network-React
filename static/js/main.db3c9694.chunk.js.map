{"version":3,"sources":["redux/authReducer.js","reportWebVitals.js","components/Navbar/Navbar.jsx","assets/images/logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/appReducer.js","redux/reduxStore.js","App.js","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","redux/profileReducer.js","redux/dialogsReducer.js","utils/objectHelpers.js","redux/usersReducer.js","api/api.js"],"names":["SET_USER_DATA","initialState","userId","email","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","a","authAPI","me","response","data","resultCode","id","password","rememberMe","message","messages","stopSubmit","_error","logout","authReducer","state","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","to","Header","props","src","logo","alt","onClick","ProfileContainer","this","React","Component","compose","connect","auth","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","LoginContainer","App","initializeApp","HeaderContainer","fallback","path","element","AppContainer","MainApp","ReactDOM","render","StrictMode","document","getElementById","Prelaoder","preloader","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","profile","postsData","likesCount","status","addPost","newPostText","setUserStatus","getUserProfile","profileAPI","getProfile","getStatus","updateStatus","filter","post","SEND_MESSAGE","dialogsData","name","messagesData","sendMessage","newMessageBody","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","usersAPI","getUsers","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed","instance","axios","baseURL","withCredentials","headers","get","delete","put"],"mappings":"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","file":"static/js/main.db3c9694.chunk.js","sourcesContent":["import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: action.payload.isAuth,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\nconst setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n    },\r\n});\r\n\r\n// Thunk creators\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        const { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login =\r\n    (email, password, rememberMe = false) =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.login(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages\r\n                ? response.data.messages[0]\r\n                : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", { _error: message }));\r\n        }\r\n    };\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <div className=\"nav__item\">\r\n                <NavLink className=\"nav__link\" to=\"/profile\">\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"nav__item\">\r\n                <NavLink className=\"nav__link\" to=\"/users\">\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"nav__item\">\r\n                <NavLink className=\"nav__link\" to=\"/dialogs\">\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"nav__item\">\r\n                <NavLink className=\"nav__link\" to=\"/news\">\r\n                    News\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"nav__item\">\r\n                <NavLink className=\"nav__link\" to=\"/music\">\r\n                    Music\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"nav__item\">\r\n                <NavLink className=\"nav__link\" to=\"/settings\">\r\n                    Settings\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/logo.d700c320.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"logo\" />\r\n            <div className=\"login-block\">\r\n                {props.isAuth ? (\r\n                    <div>\r\n                        {props.login}{\" \"}\r\n                        <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                ) : (\r\n                    <NavLink to={\"/login\"}>Login</NavLink>\r\n                )}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { logout } from \"../../redux/authReducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        logout,\r\n    })\r\n)(ProfileContainer);\r\n","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"samurai-network/app/INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\n// Thunk creators\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(getAuthUserData());\r\n\r\n    dispatch(initializedSuccess());\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Suspense } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/appReducer\";\nimport Loader from \"./components/common/Preloader/Preloader\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/reduxStore\";\nimport \"./App.scss\";\n\nconst DialogsContainer = React.lazy(() =>\n    import(\"./components/Dialogs/DialogsContainer\")\n);\n\nconst ProfileContainer = React.lazy(() =>\n    import(\"./components/Profile/ProfileContainer\")\n);\n\nconst UsersContainer = React.lazy(() =>\n    import(\"./components/Users/UsersContainer\")\n);\n\nconst LoginContainer = React.lazy(() =>\n    import(\"./components/Login/LoginContainer\")\n);\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Loader />;\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer />\n                <Navbar />\n                <Suspense fallback={<Loader />}>\n                    <div className=\"content\">\n                        <Routes>\n                            <Route\n                                path=\"/profile\"\n                                element={<ProfileContainer />}\n                            >\n                                <Route\n                                    path=\":userId\"\n                                    element={<ProfileContainer />}\n                                />\n                            </Route>\n                            <Route\n                                path=\"/dialogs/*\"\n                                element={<DialogsContainer />}\n                            />\n                            <Route path=\"/users\" element={<UsersContainer />} />\n                            <Route path=\"/login\" element={<LoginContainer />} />\n                        </Routes>\n                    </div>\n                </Suspense>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n});\n\nconst AppContainer = compose(connect(mapStateToProps, { initializeApp }))(App);\nconst MainApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport MainApp from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <MainApp />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/preloader.91c2aa94.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Prelaoder = () => {\r\n    return (\r\n        <div className=\"prelaoder\">\r\n            <img src={preloader} alt=\"preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Prelaoder;\r\n","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"samurai-network/profile/ADD-POST\";\r\nconst DELETE_POST = \"samurai-network/profile/DELETE_POST\";\r\nconst SET_USER_PROFILE = \"samurai-network/profile/SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"samurai-network/profile/SET_USER_STATUS\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message:\r\n                \"Quisque id mi. Praesent vestibulum dapibus nibh. Nulla sit amet est. Praesent nec nisl a purus blandit viverra. Nulla sit amet est.\",\r\n            likesCount: 10,\r\n        },\r\n        {\r\n            id: 2,\r\n            message:\r\n                \"Fusce vulputate eleifend sapien. Suspendisse nisl elit, rhoncus eget, elementum ac, condimentum eget, diam. Curabitur ullamcorper ultricies nisi.\",\r\n            likesCount: 11,\r\n        },\r\n        {\r\n            id: 3,\r\n            message:\r\n                \"Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. Nullam dictum felis eu pede mollis pretium. Nulla porta dolor. Vivamus euismod mauris. Vestibulum facilisis, purus nec pulvinar iaculis, ligula mi congue nunc, vitae euismod ligula urna in dolor.\",\r\n            likesCount: 0,\r\n        },\r\n    ],\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData,\r\n                    {\r\n                        id: 5,\r\n                        message: action.newPostText,\r\n                        likesCount: 0,\r\n                    },\r\n                ],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(\r\n                    (post) => post.id !== action.id\r\n                ),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (id) => ({ type: DELETE_POST, id });\r\n\r\nconst setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n});\r\nconst setUserStatus = (status) => ({\r\n    type: SET_USER_STATUS,\r\n    status,\r\n});\r\n\r\n// Thunk creators\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","const SEND_MESSAGE = \"samurai-network/dialogs/SEND-MESSAGE\";\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: \"Vasea\" },\r\n        { id: 2, name: \"Gheorghe\" },\r\n        { id: 3, name: \"Andrei\" },\r\n        { id: 4, name: \"Oleg\" },\r\n        { id: 5, name: \"Sasha\" },\r\n        { id: 6, name: \"Sveta\" },\r\n        { id: 7, name: \"Abdulah\" },\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: \"Hi\" },\r\n        { id: 2, message: \"How are you?\" },\r\n        { id: 3, message: \"Yo\" },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesData: [\r\n                    ...state.messagesData,\r\n                    {\r\n                        id: 5,\r\n                        message: action.newMessageBody,\r\n                        likesCount: 0,\r\n                    },\r\n                ],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessage = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","export const updateObjectInArray = (\r\n    items,\r\n    itemId,\r\n    objPropName,\r\n    newObjProps\r\n) => {\r\n    return items.map((item) => {\r\n        if (item[objPropName] === itemId) {\r\n            return {\r\n                ...item,\r\n                ...newObjProps,\r\n            };\r\n        }\r\n        return item;\r\n    });\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = \"samurai-network/users/FOLLOW\";\r\nconst UNFOLLOW = \"samurai-network/users/UNFOLLOW\";\r\nconst SET_USERS = \"samurai-network/users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"samurai-network/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"samurai-network/users/SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"samurai-network/users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS =\r\n    \"samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n                    followed: true,\r\n                }),\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n                    followed: false,\r\n                }),\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users],\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [\r\n                          state.followingInProgress.filter(\r\n                              (id) => id !== action.userId\r\n                          ),\r\n                      ],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n});\r\nexport const setTotalUsersCount = (count) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n});\r\n\r\n// Thunk creators\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n    dispatch,\r\n    userId,\r\n    apiMethod,\r\n    actionCreator\r\n) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) =>\r\n    followUnfollowFlow(\r\n        dispatch,\r\n        userId,\r\n        usersAPI.follow.bind(usersAPI),\r\n        followSuccess\r\n    );\r\n\r\nexport const unfollow = (userId) => async (dispatch) =>\r\n    followUnfollowFlow(\r\n        dispatch,\r\n        userId,\r\n        usersAPI.unfollow.bind(usersAPI),\r\n        unfollowSuccess\r\n    );\r\n\r\nexport default usersReducer;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"3c7c7e3b-795d-4983-977b-cd3c7549fe60\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance\r\n            .get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response) => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status });\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n};\r\n"],"sourceRoot":""}