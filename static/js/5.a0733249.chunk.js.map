{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","components/Dialogs/AddMessageForm.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["requiredField","value","undefined","maxLength","length","renderField","Element","input","meta","touched","error","props","hasError","className","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","maxLength20","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","DialogItem","id","Message","message","Dialogs","dialogsData","dialogsPage","map","dialog","messagesData","formData","sendMessage","newMessageBody","compose","newMessageText"],"mappings":"oIAAA,oEAAO,IAAMA,EAAgB,SAACC,GAAD,OACzBA,OAAQC,EAAY,sBAEXC,EAAY,SAACA,GAAD,OAAe,SAACF,GAAD,OACpCA,GAASA,EAAMG,QAAUD,OACnBD,EADN,wBAEuBC,EAFvB,e,wHCFSE,EACT,SAACC,GAAD,OACA,YAAoD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,iBACzCC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAS,uBAAkBD,EAAW,QAAU,IAArD,UACI,8BACI,cAACN,EAAD,2BAAaC,GAAWI,MAE3BC,GAAY,qCAAQF,EAAR,a,oJCPzBI,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKV,MAAMK,OAIT,cAACG,EAAD,eAAeE,KAAKV,QAHhB,cAAC,IAAD,CAAUW,GAAG,eAJW,GACXC,IAAMJ,WAUtC,OAAOK,YAAQV,EAARU,CAAoCJ,K,6HCdzCK,EAActB,YAAU,IAgBfuB,cAAU,CACrBC,KAAM,kBADKD,EAdQ,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,cAACC,EAAA,EAAD,CACIC,YAAY,qBACZC,KAAK,iBACLC,UAAW5B,YAAY,YACvB6B,SAAU,CAAClC,IAAeyB,KAE9B,wD,QCLGU,EARI,SAACxB,GAChB,OACI,qBAAKE,UAAU,gBAAf,SACI,cAAC,IAAD,CAASS,GAAE,mBAAcX,EAAMyB,IAA/B,SAAsCzB,EAAMqB,UCAzCK,EAJC,SAAC1B,GACb,OAAO,qBAAKE,UAAU,iBAAf,SAAiCF,EAAM2B,WC2BnCC,EAzBC,SAAC5B,GACb,IAAM6B,EAAc7B,EAAM8B,YAAYD,YAAYE,KAAI,SAACC,GAAD,OAClD,cAAC,EAAD,CAAYP,GAAIO,EAAOP,GAAIJ,KAAMW,EAAOX,MAAWW,EAAOP,OAGxDQ,EAAejC,EAAM8B,YAAYG,aAAaF,KAAI,SAACJ,GAAD,OACpD,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQF,OAOpD,OACI,sBAAKvB,UAAU,UAAf,UACI,oBAAIA,UAAU,iBAAd,qBACA,qBAAKA,UAAU,iBAAf,SAAiC2B,IACjC,sBAAK3B,UAAU,WAAf,UACI,8BAAM+B,IACN,cAAC,EAAD,CAAgBhB,SAVN,SAACiB,GACnBlC,EAAMmC,YAAYD,EAASE,0BCJpBC,sBACXxB,aANoB,SAACT,GAAD,MAAY,CAChC0B,YAAa1B,EAAM0B,YACnBQ,eAAgBlC,EAAM0B,YAAYQ,kBAIT,CACrBH,kBAEJ5B,IAJW8B,CAKbT","file":"static/js/5.a0733249.chunk.js","sourcesContent":["export const requiredField = (value) =>\r\n    value ? undefined : \"Field is required!\";\r\n\r\nexport const maxLength = (maxLength) => (value) =>\r\n    value && value.length <= maxLength\r\n        ? undefined\r\n        : `Max length is ${maxLength} symbols`;\r\n","import React from \"react\";\r\n\r\nexport const renderField =\r\n    (Element) =>\r\n    ({ input, meta: { touched, error }, ...props }) => {\r\n        const hasError = touched && error;\r\n        return (\r\n            <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n                <div>\r\n                    <Element {...input} {...props} />\r\n                </div>\r\n                {hasError && <span> {error} </span>}\r\n            </div>\r\n        );\r\n    };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to=\"/login\" />;\r\n            }\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredField } from \"../../utils/validators/validators\";\r\nimport { renderField } from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                placeholder=\"Enter your message\"\r\n                name=\"newMessageBody\"\r\n                component={renderField(\"textarea\")}\r\n                validate={[requiredField, maxLength20]}\r\n            />\r\n            <button>Send message</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"addMessageForm\",\r\n})(AddMessageForm);\r\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className=\"dialogs__item\">\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\n        </div>\n    );\n};\n\nexport default DialogItem;\n","import React from \"react\";\n\nconst Message = (props) => {\n    return <div className=\"messages__item\">{props.message}</div>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport AddMessageForm from \"./AddMessageForm\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\n\nconst Dialogs = (props) => {\n    const dialogsData = props.dialogsPage.dialogsData.map((dialog) => (\n        <DialogItem id={dialog.id} name={dialog.name} key={dialog.id} />\n    ));\n\n    const messagesData = props.dialogsPage.messagesData.map((message) => (\n        <Message message={message.message} key={message.id} />\n    ));\n\n    const addNewMessage = (formData) => {\n        props.sendMessage(formData.newMessageBody);\n    };\n\n    return (\n        <div className=\"dialogs\">\n            <h2 className=\"dialogs__title\">DIALOGS</h2>\n            <div className=\"dialogs__items\">{dialogsData}</div>\n            <div className=\"messages\">\n                <div>{messagesData}</div>\n                <AddMessageForm onSubmit={addNewMessage} />\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { sendMessage } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\n\nconst mapStateToProps = (state) => ({\n    dialogsPage: state.dialogsPage,\n    newMessageText: state.dialogsPage.newMessageText,\n});\n\nexport default compose(\n    connect(mapStateToProps, {\n        sendMessage,\n    }),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}